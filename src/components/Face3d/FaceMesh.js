/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from 'react';
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';

export default function Model(props) {
  const { material } = props;
  const { nodes, materials } = useGLTF('/3d/models/face_mesh_v030.glb');

  const face = React.useRef();

  useFrame(({ clock }) => {
    face.current.position.z = THREE.MathUtils.lerp(
      face.current.position.z,
      face.current.position.z + Math.sin(clock.getElapsedTime()) * 0.15,
      0.01,
    );
    face.current.rotation.y = THREE.MathUtils.lerp(
      face.current.rotation.y,
      face.current.rotation.y + Math.sin(clock.getElapsedTime()) * 0.25,
      0.01,
    );
  });

  return (
    <group ref={face} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.045, 0.045, 0.045]}>
        <group position={[-3.29, 2.38, -2.61]} rotation={[0.02, 0, 0.06]}>
          <mesh
            // material={nodes.eyeLeft.material}
            material={material}
            geometry={nodes.eyeLeft.geometry}
            position={[0.18, 0, 0]}
            rotation={[1.57, 0.02, 0]}
            scale={[1.92, 1.92, 1.92]}
          />
        </group>
        <group position={[3.29, 2.38, -2.61]} rotation={[0.02, 0, 0.01]}>
          <mesh
            // material={nodes.eyeRight.material}
            material={material}
            geometry={nodes.eyeRight.geometry}
            position={[-0.14, -0.01, 0]}
            rotation={[1.56, -0.06, 0]}
            scale={[1.92, 1.92, 1.92]}
          />
        </group>
        <mesh material={nodes.teeth.material} geometry={nodes.teeth.geometry} />
        <mesh
          name="head"
          // material={nodes.head.material}
          material={material}
          geometry={nodes.head.geometry}
          morphTargetDictionary={nodes.head.morphTargetDictionary}
          morphTargetInfluences={nodes.head.morphTargetInfluences}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/3d/models/face_mesh_v030.glb');
